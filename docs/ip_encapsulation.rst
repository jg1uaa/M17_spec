M17 インターネットプロトコル (IP) ネットワーク
==============================================

デジタルモードにおいては、レピーターをインターネット (IP) に接続してネットワークを
構築することが一般的である。

DMR のような商用プロトコルにおいては、都市レベルと州レベルのネットワークを接続し、
無線を使用するユーザ間の相互運用を容易にしている。
アマチュア無線においてはこの機能を全世界とのコミュニケーションを行うための
ネットワークを作るために使用し、ハンディ機一つで「世界に働きかける」という理想を
目指す。

M17 はこれを念頭に置いた設計を行っており、IP への対応を有している。

競合する無線通信規格においては、リピーターもしくは何らかの RF〜IP ブリッジを
接続のために必要とし、ホットスポット (単方向の RF ブリッジ) の使用に至っている。


TR-9 や他の M17 無線機は、よく使われている ESP8266 やこれと似たようなチップにより
IP ネットワークへ直接接続することができる。これは、現在において必要とされる
ホットスポットへの無線接続をスキップすることで、「アマチュア無線における
デジタル音声通信はただの VoIP と変わらない」と批判される未来を招く危険を
抱えていることに注意しておく必要がある。

標準 IP フレーム
-------------------

M17 over IP は他の IP プロトコルと一貫性を持たせるため、ビッグエンディアンを使用する。
UDP のポート 17000 を使うことを標準とするが、これは推奨であり必須とはしない。
しかし今後このポートの使用を要求する可能性はある。

.. list-table:: IP フレーム構成

   * - 識別子 (MAGIC)
     - 32 ビット
     - 定数 0x4d313720 ("M17 ")
   * - ストリーム ID (SID)
     - 16 ビット
     - PTT ないしストリーム単位で変化する乱数、ただしストリーム内のフレーム間においては変化しない
   * - LICH (リンク情報チャンネル、Link Information Channel)
     - sizeof(LICH)*8 ビット
     - LICH フレーム全体 (宛先、発信元、ストリーム種別、ノンス値)
   * - FN
     - 16 bits
     - フレーム番号 (RF ストリームフレームとして送信される番号、最終フレームを示すビットは (FN & 0x8000) にある)
   * - ペイロード
     - 128 ビット
     - ペイロード (RF ストリームフレームとして送信される内容そのもの)
   * - CRC16
     - 16 ビット
     - パケット全体の CRC 値


RF→IP フレームへの変換など、パケットの内容が変更された場合や再構成が
行われた場合は、CRC 値の再計算が必要となる。

.. todo:: RF→IP および IP→RF ブリッジにおけるパケットの再構成、UDP NAT パンチング、コールサインによるルート検索

.. points_of_contact N7TAE, W2FBI

制御パケット
------------

リフレクタは何種類かの、以下の識別子を持つ制御パケットを使用する:

* *CONN* - リフレクタへの接続
* *ACKN* - 接続の承認
* *PING/PONG* - 接続の維持 (キープアライブ)
* *DISC* - 切断 (クライアント→リフレクタ もしくは リフレクタ→クライアント)

CONN
~~~~~~~~~~~~~~~

.. table :: CONN パケットの構成

  +-------+----------------------------------------------------------------------------------------------------------------+
  | バイト| 目的                                                                                                           |
  +=======+================================================================================================================+
  | 0-3   | 識別子 - ASCII "CONN"                                                                                          |
  +-------+----------------------------------------------------------------------------------------------------------------+
  | 4-9   | `アドレスのエンコード` によってエンコードされた、送信元コールサイン ('From') およびモジュール                  |
  |       | (モジュールは最後の文字に配置) (例: "A1BCD   D")                                                               |
  +-------+----------------------------------------------------------------------------------------------------------------+
  | 10    | 接続先のモジュール 1 文字の ASCII (A-Z)                                                                        |
  +-------+----------------------------------------------------------------------------------------------------------------+

.. todo:: 接続先はモジュールを示す文字ではなくコールサインも含める方が良いかもしれない - せいぜい 5 バイト増えるだけであり、一つのインスタンスに複数のリフレクタをホストさせる場合においてどこのリフレクタに対して接続するかを明確にすることができる

リフレクタへの接続を開始するために、クライアントが送信する。リフレクタは接続に成功した場合は ACKN で、失敗した場合は NACK で応答する。

ACKN
~~~~~~~~~~~~~~~~~

.. table :: ACKN パケットの構成

  +-------+----------------------------------------------------------------------------------------------------------------+
  | バイト| 目的                                                                                                           |
  +=======+================================================================================================================+
  | 0-3   | 識別子 - ASCII "ACKN"                                                                                          |
  +-------+----------------------------------------------------------------------------------------------------------------+
  | 4-9   | `アドレスのエンコード` によってエンコードされた、送信元コールサイン ('From') およびモジュール                  |
  |       | (モジュールは最後の文字に配置) (例: "A1BCD   D")                                                               |
  +-------+----------------------------------------------------------------------------------------------------------------+

NACK
~~~~~~~~~~~~~~~~~

.. table :: NACK パケットの構成

  +-------+--------------------------------------------------------------------------------------------------------------------------+
  | バイト| 目的                                                                                                                     |
  +=======+==========================================================================================================================+
  | 0-3   | 識別子 - ASCII "NACK"                                                                                                    |
  +-------+--------------------------------------------------------------------------------------------------------------------------+

PONG
~~~~~~~~~~~~~~~~~

.. table :: PONG パケットの構成

  +-------+----------------------------------------------------------------------------------------------------------------+
  | バイト| 目的                                                                                                           |
  +=======+================================================================================================================+
  | 0-3   | 識別子 - ASCII "PONG"                                                                                          |
  +-------+----------------------------------------------------------------------------------------------------------------+
  | 4-9   | `アドレスのエンコード` によってエンコードされた、送信元コールサイン ('From') およびモジュール                  |
  |       | (モジュールは最後の文字に配置) (例: "A1BCD   D")                                                               |
  +-------+----------------------------------------------------------------------------------------------------------------+

PING を受信したクライアントは、PONG 応答をすること

DISC
~~~~~~~~~~~~~~~~~

.. table :: DISC パケットの構成

  +-------+----------------------------------------------------------------------------------------------------------------+
  | バイト| 目的                                                                                                           |
  +=======+================================================================================================================+
  | 0-3   | 識別子 - ASCII "DISC"                                                                                          |
  +-------+----------------------------------------------------------------------------------------------------------------+
  | 4-9   | `アドレスのエンコード` によってエンコードされた、送信元コールサイン ('From') およびモジュール                  |
  |       | (モジュールは最後の文字に配置) (例: "A1BCD   D")                                                               |
  +-------+----------------------------------------------------------------------------------------------------------------+

クライアントあるいはリフレクタのどちらからでも、切断を要求する側が送信する。
受信した側は 4 バイトの (コールサインのフィールドが無い) "DISC" パケットを送信してアクノリッジとする。
